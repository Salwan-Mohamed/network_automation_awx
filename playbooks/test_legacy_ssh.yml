---
# Simple test playbook for legacy Aruba devices using basic SSH
- name: Test Legacy SSH Connection to Aruba Devices
  hosts: all
  connection: ssh  # Force SSH connection type
  gather_facts: no
  
  vars:
    output_path: "/var/lib/awx/projects/test_output"
  
  tasks:
    - name: Create output directory
      delegate_to: localhost
      file:
        path: "{{ output_path }}"
        state: directory
      run_once: true
    
    - name: Test SSH connection with simple commands - First Attempt
      raw: "terminal length 0"
      register: terminal_output
      ignore_errors: yes
      
    - name: Display debug info for terminal length command
      debug:
        var: terminal_output
      when: terminal_output is defined
      
    - name: Test version command 
      raw: "show version"
      register: version_output
      ignore_errors: yes
      
    - name: Display successful connections
      debug:
        msg: "Successfully connected to {{ inventory_hostname }}"
      when: version_output is defined and version_output.rc == 0
        
    - name: Save version output when successful
      delegate_to: localhost
      copy:
        content: "{{ version_output.stdout | default('No output') }}"
        dest: "{{ output_path }}/{{ inventory_hostname }}_version.txt"
      when: version_output is defined and version_output.rc == 0
      
    - name: Attempt to fetch running configuration
      raw: "show running-config"
      register: config_output
      ignore_errors: yes
      when: version_output is defined and version_output.rc == 0
      
    - name: Try alternate command if first fails
      raw: "show config"
      register: config_output2
      ignore_errors: yes
      when: (config_output is not defined) or 
            (config_output is defined and config_output.rc != 0)
      
    - name: Save configuration output from first attempt
      delegate_to: localhost
      copy:
        content: "{{ config_output.stdout | default('No output') }}"
        dest: "{{ output_path }}/{{ inventory_hostname }}_config.txt"
      when: config_output is defined and config_output.rc == 0
      
    - name: Save configuration output from second attempt
      delegate_to: localhost
      copy:
        content: "{{ config_output2.stdout | default('No output') }}"
        dest: "{{ output_path }}/{{ inventory_hostname }}_config_alt.txt"
      when: config_output2 is defined and config_output2.rc == 0
      
    - name: Display errors for failed connections
      debug:
        msg: 
          - "Failed to connect to {{ inventory_hostname }}"
          - "Version command error: {{ version_output.stderr | default('Unknown error') }}"
      when: version_output is defined and version_output.rc != 0
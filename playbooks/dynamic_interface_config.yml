---
- name: Resolve Switch Based on Room Number and Convert Wall Point
  hosts: localhost
  gather_facts: no
  vars_files:
    - ../vars/switch_mapping.yml
    - ../vars/interface_name.yml
    - ../vars/vlan_mapping.yml
    - ../vars/wall_point_mapping.yml
  collections:
    - community.network

  tasks:
    - name: Find Switch for Given Room
      set_fact:
        switch_name: "{{ item.key }}"
      loop: "{{ switch_mapping | dict2items }}"
      when: room in item.value

    - name: Fail if No Matching Switch is Found
      fail:
        msg: "No switch found for room {{ room }}. Check switch_mapping.yml"
      when: switch_name is not defined

    - name: Convert Wall Point to Switch Port
      set_fact:
        actual_port_number: "{{ wall_point_mapping[port_number] }}"
      when: port_number is defined and port_number in wall_point_mapping

    - name: Use direct port number if not in wall point mapping
      set_fact:
        actual_port_number: "{{ port_number }}"
      when: port_number is defined and port_number not in wall_point_mapping

    - name: Fail if Port Number Not Provided
      fail:
        msg: "Port number is required"
      when: port_number is not defined or port_number == ''

    - name: Validate Device Type
      fail:
        msg: "Invalid device type '{{ device_type }}'. Valid types are: {{ vlan_mapping.keys() | list }}"
      when: device_type is defined and device_type not in vlan_mapping

    - name: Get Interface Description
      set_fact:
        interface_description: "{{ interface_descriptions[room] | default('Port_' + (room | string) + '_WP' + (port_number | string)) }}"
      when: room is defined and room != '' and room is not none

    - name: Set default interface description when room is not provided
      set_fact:
        interface_description: "Port_WP{{ port_number | string }}"
      when: room is not defined or room == '' or room is none

    - name: Add Resolved Switch to Inventory
      add_host:
        name: "{{ switch_name }}"
        groups: dynamic_switches
        ansible_port_number: "{{ actual_port_number }}"
        interface_description: "{{ interface_description }}"
        ansible_device_type: "{{ device_type }}"
        ansible_second_device_type: "{{ second_device_type | default('none') }}"

- name: Configure Aruba Switch Port Based on Device Type and Configuration Cases
  hosts: dynamic_switches
  gather_facts: no
  vars_files:
    - ../vars/vlan_mapping.yml
  connection: network_cli
  collections:
    - community.network
  
  tasks:
    - name: Debug switch information
      debug:
        msg: 
          - "Switch: {{ inventory_hostname }}"
          - "Port: {{ hostvars[inventory_hostname]['ansible_port_number'] }}"
          - "Interface Description: {{ hostvars[inventory_hostname]['interface_description'] }}"
          - "Device Type: {{ hostvars[inventory_hostname]['ansible_device_type'] }}"
          - "Second Device Type: {{ hostvars[inventory_hostname]['ansible_second_device_type'] }}"

    - name: Reset the interface to default configuration
      aruba_config:
        lines:
          - "no interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"
          - "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"

    - name: Configure interface for phone only (Case 1)
      when: hostvars[inventory_hostname]['ansible_device_type'] == "phone"
      block:
        - name: Configure phone interface settings
          aruba_config:
            lines:
              - "name {{ hostvars[inventory_hostname]['interface_description'] }}"
              - "tagged vlan {{ vlan_mapping.phone }}"
              - "speed-duplex auto"
              - "enable"
            parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"
        
        - name: Configure port security for phone
          aruba_config:
            lines:
              - "port-security {{ hostvars[inventory_hostname]['ansible_port_number'] }} address-limit 1 learn-mode static action send-disable"

    - name: Configure interface for non-phone devices (Case 2)
      when:
        - hostvars[inventory_hostname]['ansible_device_type'] != "phone"
        - hostvars[inventory_hostname]['ansible_device_type'] != "none"
        - hostvars[inventory_hostname]['ansible_second_device_type'] == "none"
      block:
        - name: Configure non-phone device interface settings
          aruba_config:
            lines:
              - "name {{ hostvars[inventory_hostname]['interface_description'] }}"
              - "untagged vlan {{ vlan_mapping[hostvars[inventory_hostname]['ansible_device_type']] }}"
              - "speed-duplex auto"
              - "enable"
            parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"
        
        - name: Configure port security for non-phone device
          aruba_config:
            lines:
              - "port-security {{ hostvars[inventory_hostname]['ansible_port_number'] }} address-limit 1 learn-mode static action send-disable"

    - name: Configure interface for device with phone (Case 3)
      when:
        - hostvars[inventory_hostname]['ansible_second_device_type'] == "phone"
      block:
        - name: Configure device with phone interface settings
          aruba_config:
            lines:
              - "name {{ hostvars[inventory_hostname]['interface_description'] }}"
              - "untagged vlan {{ vlan_mapping[hostvars[inventory_hostname]['ansible_device_type']] }}"
              - "tagged vlan {{ vlan_mapping.phone }}"
              - "speed-duplex auto"
              - "enable"
            parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"
        
        - name: Configure port security for device with phone
          aruba_config:
            lines:
              - "port-security {{ hostvars[inventory_hostname]['ansible_port_number'] }} address-limit 2 learn-mode static action send-disable"

    - name: Configure interface for none device (Case 4)
      when: 
        - hostvars[inventory_hostname]['ansible_device_type'] == "none"
        - hostvars[inventory_hostname]['ansible_second_device_type'] == "none"
      block:
        - name: Configure none device interface settings
          aruba_config:
            lines:
              - "name {{ hostvars[inventory_hostname]['interface_description'] }}"
              - "speed-duplex auto"
              - "disable"
            parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"
        
        - name: Configure port security for none device
          aruba_config:
            lines:
              - "port-security {{ hostvars[inventory_hostname]['ansible_port_number'] }} address-limit 1 learn-mode static action send-disable"

    - name: Save configuration
      aruba_config:
        lines:
          - "write memory"
